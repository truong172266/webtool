{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","firebase/Firebase.js","firebase/FirebaseWeb.js","screens/FbScreen/Tutorial.js","screens/FbScreen/styles.js","screens/FbScreen/AddUser.js","screens/FbScreen/FbService.js","screens/FbScreen/FbScreen.tsx","components/Themed.tsx","components/StyledText.tsx","components/EditScreenInfo.tsx","screens/OtherScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf"],"names":["useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","firebaseWeb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","date","hours","getHours","minutes","getMinutes","ampm","Date","getDate","getMonth","getFullYear","path","data","a","async","ref","set","alert","type","action","orderByKey","on","dataUpdate","push","then","snap","key","send","this","e","styles","StyleSheet","create","container","flex","justifyContent","backgroundColor","video","alignSelf","width","height","marginTop","buttons","flexDirection","alignItems","paramain","color","Tutorial","React","setStatus","url","setUrl","fetch","res","json","result","Card","Content","style","maxWidth","Title","Paragraph","TouchableOpacity","onPress","window","open","Video","source","uri","useNativeControls","resizeMode","isLooping","onPlaybackStatusUpdate","status","titleHeader","borderRightWidth","marginRight","bottom","surface","elevation","sectionTwo","textContentFlatlist","borderEndWidth","User","props","showModal","setState","visible","hideModal","containerStyle","padding","borderRadius","state","facebook","password","cookie","Firebase","selected","like","react","answer","comment","friend","care_nick","View","Portal","Modal","stateModal","onDismiss","actionModal","contentContainerStyle","TextInput","onChangeText","prevState","defaultValue","placeholder","secureTextEntry","icon","mode","contentStyle","pushAction","optionsPerPage","SmallInfo","auto_like","auto_rr","auto_answer","auto_comment","friend_bool","auto_care_nick","update","start","setTimeout","arr","content","split","index","length","id","Math","random","value","Clipboard","setString","getString","DataTable","Row","Cell","number","copy","AntDesign","name","size","Text","Switch","onValueChange","prompt","toString","c","Number","isInteger","parseInt","b","count","includes","li","res1","console","log","link","Button","title","FbService","page","itemPerPage","listen","snapshot","val","Object","values","Cover","Surface","Header","FlatList","initialNumToRender","keyExtractor","item","renderItem","Pagination","numberOfPages","onPageChange","label","FbScreen","isSwitchOn","active","all","idLike","jndex","Promise","r","SafeAreaView","Appbar","Action","ProgressBar","progress","Colors","red800","Section","Item","useThemeColor","colorName","theme","colorFromProps","lightColor","darkColor","otherProps","MonoText","fontFamily","EditScreenInfo","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","WebBrowser","marginHorizontal","marginVertical","paddingHorizontal","fontSize","lineHeight","textAlign","paddingVertical","OtherScreen","separator","fontWeight","BottomTab","createBottomTabNavigator","BottomTabNavigator","colorScheme","Navigator","initialRouteName","tabBarOptions","activeTintColor","Screen","component","FbNavigator","options","tabBarIcon","TabBarIcon","OtherNavigator","Ionicons","marginBottom","TabOneStack","createStackNavigator","screenOptions","headerShown","headerTitle","TabTwoStack","prefixes","Linking","config","screens","Root","TabOne","TabOneScreen","TabTwo","TabTwoScreen","NotFound","Navigation","NavigationContainer","linking","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","require","warn","useCachedResources","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.fd6cd3de.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","import {FirebaseWeb} from \"../firebase/FirebaseWeb\";\nimport firebase from \"firebase\";\nconst firebaseWeb = FirebaseWeb.database();\nclass Firebase {\n    timeStamp (date){\n            var hours = date.getHours();\n            var minutes = date.getMinutes();\n            var ampm = hours >= 12 ? 'PM' : 'AM';\n            hours = hours % 12;\n            hours = hours ? hours : 12;\n            minutes = minutes < 10 ? '0' + minutes : minutes;\n            var strTime = hours + ':' + minutes + ' ' + ampm;\n            return strTime +' | '+ new Date().getDate()+ '/' + (new Date().getMonth()+ 1) + '/'+ + new Date().getFullYear();\n    }\n    async send (path, data){\n        try {\n            await firebaseWeb.ref(path).set(data);\n        }\n        catch(e){\n            alert(e);\n        }\n\n    }\n    async listen (path, type,action){\n        try {\n            await firebaseWeb.ref(path).orderByKey().on(type,action);\n        }\n        catch(e){\n            alert(e);\n        }\n\n    }\n    async push (path,data, dataUpdate){\n        try {\n            await firebaseWeb.ref(path).push(data).then((snap)=>{\n                    const key = snap.key;\n                    this.send (`${path}/${key}/key`, key\n                    );\n                }\n            );\n        }\n        catch(e){\n            alert(e);\n        }\n    }\n    async update  (path,key,data){\n        try {\n            this.send (`${path}/${key}`, data\n            );\n        }\n        catch(e){\n            alert('error');\n        }\n    }\n\n}\nexport default new  Firebase();\n","import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCpCE9jyqrLkDEUstipfzXfhKdSAU-yvfM\",\n    authDomain: \"template-ui.firebaseapp.com\",\n    projectId: \"template-ui\",\n    storageBucket: \"template-ui.appspot.com\",\n    messagingSenderId: \"678691011139\",\n    appId: \"1:678691011139:web:3de78eefde36b5d4a972f6\",\n    measurementId: \"G-BDLJF5C0EV\"\n};\n\nexport const FirebaseWeb = firebase.initializeApp(firebaseConfig);\n","import * as React from 'react';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    Button, TouchableOpacity,\n\n} from 'react-native';\nimport { Video } from 'expo-av';\nimport { DataTable,Switch,TextInput,Appbar,Surface,Drawer, Card,Title,Paragraph } from 'react-native-paper';\nfunction Tutorial ()  {\n        const [status, setStatus] = React.useState({});\n        const [url, setUrl] = React.useState('');\n        const test = React.useEffect(\n            ()=>{\n                fetch(\"https://template-ui-default-rtdb.firebaseio.com/tutorial.json\").then(res => res.json()).then(\n                    result => {\n                        setUrl(url)\n                    }\n                )\n            }\n        );\n        const video = React.useRef(\n            null\n\n        );\n\n\n        return(\n            <Card.Content style={{ maxWidth:'30%'}}>\n                <Title>Hướng dẫn dùng công cụ:</Title>\n                <Paragraph style={styles.paramain}>1. Auto Like : Ex  = 257404382527504</Paragraph>\n                <Paragraph >/// Note: id là một chuỗi số </Paragraph>\n                <Paragraph style={styles.paramain}>2. Auto Answer</Paragraph>\n                <Paragraph style={styles.paramain}>3. Auto Comment : Ex = answer1,answer2,asnwer3 & 257404382527504   </Paragraph>\n                <Paragraph >/// Note : nhiều câu trả lời thì thì cách nhau bằng , spam tin nhắn đc đấy :))</Paragraph>\n                <Paragraph>Và: id đứng sau & và là một chuỗi số </Paragraph>\n                <Paragraph style={styles.paramain}>4. Auto Add Friends</Paragraph>\n                <Paragraph style={styles.paramain}>5. Auto Comment Filter at gr or page </Paragraph>\n                <Paragraph style={styles.paramain}>6. Care Nick</Paragraph>\n                <Paragraph style={styles.paramain}>7. LIKE ALL : EX: 257404382527504 & 2000</Paragraph>\n                <Paragraph style={styles.paramain}>/// Note: id & delay , nhập id & thời gian delay bằng ms  </Paragraph>\n                <Paragraph style={styles.paramain}>8. Other</Paragraph>\n                <TouchableOpacity onPress={()=>window.open(\"https://www.youtube.com/watch?v=Cm0Q4fhwtSw\")}>\n                    <Paragraph style={{color:'#4630EB'}}>9. Video hướng dẫn >> Click</Paragraph>\n                </TouchableOpacity>\n\n                <TouchableOpacity onPress={()=>window.open(\"https://id.atpsoftware.vn/\")}>\n                    <Title style={{color:'#3366BB'}}>GET ID ONLINE HERE </Title>\n                </TouchableOpacity>\n                <Video\n                    ref={video}\n                    style={styles.video}\n                    source={{\n                        uri:\"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\",\n                    }}\n                    useNativeControls\n                    resizeMode=\"contain\"\n                    isLooping\n                    onPlaybackStatusUpdate={status => setStatus(() => status)}\n                />\n\n\n                {/*<View style={styles.buttons}>*/}\n                {/*    <Button*/}\n                {/*        title={status.isPlaying ? 'Pause' : 'Play'}*/}\n                {/*        onPress={() =>*/}\n                {/*            status.isPlaying ? video.current.pauseAsync() : video.current.playAsync()*/}\n                {/*        }*/}\n                {/*    />*/}\n                {/*</View>*/}\n            </Card.Content>\n        )\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: '#ecf0f1',\n    },\n    video: {\n        alignSelf: 'center',\n        width: '100%',\n        height: 200,\n        marginTop:30\n    },\n    buttons: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    paramain:{\n        color:'red'\n    }\n});\nexport default Tutorial\n","import {\n    StyleSheet,\n    View,\n    Text,\n    Button,\n\n} from 'react-native'\nconst styles = StyleSheet.create({\n    titleHeader:{\n        borderRightWidth:1,\n        justifyContent:'center',\n        marginRight:3\n    },\n    bottom: {\n    },\n    surface: {\n        alignSelf: 'center',\n        elevation: 4,\n        height:'50%',\n        width:'170%',\n    },\n    sectionTwo:{\n        marginTop:50,\n        flexDirection:\"row\",\n        height:'100%',\n        justifyContent:'space-between',\n    },\n    textContentFlatlist:{\n        borderEndWidth:1,\n        justifyContent:'center'\n    }\n\n})\n\nexport default styles\n","import * as React from 'react';\nimport {\n    View,\n} from 'react-native';\nimport {Modal, Portal, Text, Button, Provider, TextInput, DataTable} from 'react-native-paper';\nimport FbService from \"./FbService\";\nimport Firebase from \"../../firebase/Firebase\";\n\nexport default class User extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data:{\n                facebook: '',\n                password:'',\n                cookie:'',\n            },\n            visible: false ,\n        }\n    }\n    async pushAction(){\n        await Firebase.push('action',\n            {\n                selected : 1,\n                facebook: this.state.data.facebook,\n                password:this.state.data.password,\n                cookie:this.state.data.cookie,\n                like:'',\n                react:'',\n                answer:'',\n                comment:'',\n                friend:'',\n                care_nick:'',\n            }\n        )\n    }\n    showModal = () => this.setState({visible:this.props.visible});\n    hideModal = () =>this.setState({visible:false});\n    containerStyle = {backgroundColor: 'white', padding: 20, width:'30%', alignSelf:'center',justifyContent:'space-between', height:'35%', borderRadius:20};\n\n    render(){\n\n        return (\n                <View>\n                    <Portal>\n                        <Modal visible={this.props.stateModal} onDismiss={this.props.actionModal} contentContainerStyle={this.containerStyle}>\n                            <TextInput\n                                onChangeText={text => this.setState(\n                                    (prevState)=>{\n                                        prevState.data = {\n                                            ...prevState.data,\n                                            facebook: text,\n                                        }\n                                    }\n                                )}\n                                defaultValue={this.state.data.facebook}\n                                placeholder={\"Type ...........\"}\n                                secureTextEntry={true}\n                            />\n                            <TextInput\n                                defaultValue = {this.state.data.password}\n                                onChangeText={(text)=>{\n                                    this.setState((prevState)=>{\n                                        prevState.data = {\n                                            ...prevState.data,\n                                            password: text,\n                                        }\n                                    })\n                                }}\n                                placeholder={\"Type ...........\"}\n                                secureTextEntry={true}\n                            />\n                            <TextInput\n                                defaultValue = {this.state.data.cookie}\n                                onChangeText={(text)=>{\n                                    this.setState((prevState)=>{\n                                        prevState.data = {\n                                            ...prevState.data,\n                                            cookie: text,\n                                        }\n                                    })\n                                }}\n                                placeholder={\"Type ...........\"}\n\n                            />\n                            <View style={{flexDirection:'row',justifyContent:'space-evenly'}}>\n                                <Button icon=\"send\" mode=\"outlined\"\n                                        contentStyle={{width:'30%', }}\n                                        style={{marginTop:20}}\n                                        onPress={() => this.pushAction()}>\n                                </Button>\n                            </View>\n                        </Modal>\n                    </Portal>\n                </View>\n        );\n    }\n};\n\n","import {Card, DataTable, Paragraph, Surface, Switch,  Title,TextInput,ProgressBar, Colors} from \"react-native-paper\";\nimport styles from \"./styles\";\nimport {Button, View, FlatList, Text, Alert, Clipboard,TouchableOpacity} from \"react-native\";\nimport * as React from \"react\";\nimport {AntDesign, Ionicons} from '@expo/vector-icons';\nimport Firebase from \"../../firebase/Firebase\";\nconst optionsPerPage = [2, 3, 4];\nimport User from \"./AddUser\";\n\nvar self;\n// @ts-ignore\nclass SmallInfo extends User{\n    constructor(props){\n        super(props);\n        this.state = {\n            auto_like: false,\n            auto_rr:false,\n            auto_answer:false,\n            auto_comment:false,\n            friend_bool:false,\n            auto_care_nick:false,\n            action:false,\n            data :\n                {\n                    selected : 1,\n                    facebook: '',\n                    password:'',\n                    cookie:'',\n                    like:'',\n                    react:'',\n                    answer:'',\n                    comment:'',\n                    friend:'',\n                    care_nick:'',\n                },\n        }\n\n    }\n    pushAction(){\n         if (this.props.cookie !== \"\"){\n             this.setState({action:true},\n                 async ()=>{\n                     await Firebase.update(`action`,\n                         `${this.props.start}`,\n                         {\n                             selected : 1,\n                             facebook: this.props.facebook,\n                             password:this.props.password,\n                             key:this.props.start,\n                             cookie:this.props.cookie,\n                             like:this.state.data.like,\n                             react:this.state.data.react,\n                             answer:this.state.data.answer,\n                             comment:this.state.data.comment,\n                             friend:this.state.data.friend,\n                             care_nick:this.state.data.care_nick,\n                         }\n                     )\n\n\n                     setTimeout(() => {\n                             try {\n                                 var arr = this.state.data.comment.content.split(',')\n                                 if (this.state.auto_comment === true) {\n                                     for (var index = 0; index < arr.length; index++) {\n                                         fetch('https://graph.facebook.com/v2.3/' + this.state.data.comment.id + '/comments?message=' + arr[index] + '&access_token=' + this.props.cookie + '&method=post')\n                                     }\n                                 }\n                             }\n                             catch(e){}\n                         }\n                         , Math.random()*2000);\n                     setTimeout(() => {\n                             try{\n                                 if (this.state.auto_like === true){\n                                     fetch('https://graph.facebook.com/v2.3/'+ this.state.data.like+'/likes?access_token='+ this.props.cookie+'&method=post')\n                                 }\n                             }\n                             catch(e){}\n                         }\n                         , Math.random()*2000);\n                     await alert('Success')\n                 }\n             )\n\n\n         }\n         else {\n             alert(\"user này thiếu tooken\");\n         }\n    }\n    copy (value){\n        Clipboard.setString(value);\n        return Clipboard.getString();\n    }\n    render() {\n        return(\n            <View>\n                <DataTable.Row>\n                    <DataTable.Cell style={{flex:0.5,borderEndWidth:1,justifyContent:'center'}}>{this.props.number}</DataTable.Cell>\n                    <DataTable.Cell  style={styles.textContentFlatlist}>\n                        <TouchableOpacity\n                            onPress={() => this.copy(`${this.props.facebook}`)}\n                        >\n                            <AntDesign name={'copy1'} size={15}/>\n                        </TouchableOpacity>\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <TouchableOpacity\n                            onPress={() => this.copy(`${this.props.password}`)}\n                        >\n                            <AntDesign name={'copy1'} size={15}/>\n                        </TouchableOpacity>\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        {this.props.cookie !== \"\" ? <TouchableOpacity\n                            onPress={() => this.copy(`${this.props.cookie}`)}\n                        >\n                            <AntDesign name={'copy1'} size={15}/>\n                        </TouchableOpacity> : <Text>null</Text>}\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_like}\n                            onValueChange={() =>{\n                                var value = 266\n                                try{\n                                    if (this.state.auto_like=== false ) {\n                                        // var like = prompt(\"Tool cho biết\", \"like,https://www.facebook.com/ieltsilgt/photos/a.114187730182504/320427316225210/\").toString()\n                                        var like = prompt(\"Tool cho biết\", \"id_link\").toString()\n                                        var res = like.split('_')\n                                        var c =Number.isInteger(parseInt(like))\n                                        var a =Number.isInteger(parseInt(res[0]))\n                                        var b =Number.isInteger(parseInt(res[1]))\n\n                                        // if(like !== ''&& (like.includes(\"www.\") || like.includes(\"https://\") ||  like.includes(\"http://\"))){\n                                        if(( a &&b) || c){\n                                            this.setState({auto_like : !this.state.auto_like})\n                                            this.setState(function (prevState){\n                                                prevState.data = {\n                                                    ...prevState.data,\n                                                    like: like,\n                                                }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và chứa id là một số, đồng thời cách nhau bởi dấu phẩy\")\n                                            // alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và địa chỉ chưa https:// or http:// or www.\")\n                                        }\n\n                                        value = 172;\n                                    } else {\n                                        this.setState({auto_answer: false});\n                                    }\n                                }\n                                catch(e){}\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_rr}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                try{\n                                    if (this.state.auto_rr === false ) {\n                                        var react = prompt(\"Tool cho biết\",\"answer,https://www.facebook.com/ieltsilgt/photos/a.114187730182504/320427316225210/\").toString()\n                                        var arr = [\"like\",\"tim\",\"haha\",\"thương thương\"]\n                                        var count = 0;\n                                        for (var index = 0; index<4;index ++){\n                                            if(react.includes(arr[index])){\n                                                count =1;\n                                            }\n                                        }\n                                        if(count === 1 || (react.includes(\"www.\") || react.includes(\"https://\") ||  react.includes(\"http://\")) ){\n                                            this.setState({auto_rr : !this.state.auto_rr})\n                                            this.setState((prevState)=>{\n                                                prevState.data = {\n                                                    ...prevState.data,\n                                                    react: react,\n                                                }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Hãy nhập một trong bốn chữ cái : like, tim, haha, thương thương, và địa chỉ chứa https:// or http:// or www.\");\n                                        }\n\n                                        value = 172;li\n\n                                    }\n\n                                    else{\n                                        this.setState({ auto_rr: false});\n                                    }\n\n                                }\n                                catch(e){\n\n                                    }\n                            }\n\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_answer}\n                            onValueChange={() => {\n                                var value = 266\n                                try{\n                                    if (this.state.auto_answer === false ) {\n                                        var answer = prompt(\"Tool cho biết\", \"Nhập câu trả lời...\").toString()\n                                        if(answer !== ''&& (answer.includes(\"www.\") || answer.includes(\"https://\") ||  answer.includes(\"http://\"))){\n                                            this.setState({auto_answer : !this.state.auto_answer})\n                                            this.setState((prevState)=>{\n                                                    prevState.data = {\n                                                        ...prevState.data,\n                                                        answer: answer,\n                                                    }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và địa chỉ chưa https:// or http:// or www.\")\n                                        }\n\n                                        value = 172;\n                                    } else {\n                                        this.setState({auto_answer: false});\n                                    }\n                                }\n                                catch(e){}\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_comment}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                try{\n                                    if (this.state.auto_comment === false ) {\n                                        var comment = prompt(\"Tool cho biết\", \"Your comment...& id\").toString()\n                                        var res = comment.split(\"&\");\n                                        var res1 = res[1].split('_')\n                                        var a =Number.isInteger(parseInt(res1[0]))\n                                        var b =Number.isInteger(parseInt(res1[1]))\n                                        var c = Number.isInteger(parseInt(res[1]))\n                                        if((a && b) || c ){\n                                            this.setState({auto_comment : !this.state.auto_comment})\n                                            this.setState((prevState)=>{\n                                                    prevState.data = {\n                                                        ...prevState.data,\n                                                        comment: {id : res[1],content:res[0]} ,\n                                                    }\n                                            })\n\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và chứa id là một số và đồng thời cách nhau bởi &\")\n                                        }\n                                        value = 172;\n                                    } else {\n                                        this.setState({auto_comment: false});\n                                    }\n                                    console.log(this.state.auto_comment)\n                                }\n                                catch(e){}\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.friend_bool}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                try{\n                                    if (this.state.friend_bool === false ) {\n                                        var link = prompt(\"Tool cho biết\", \"Nhập link...\").toString()\n                                        if(link !== '' && (link.includes(\"www.\") || link.includes(\"https://\") ||  link.includes(\"http://\") )){\n                                            this.setState({friend_bool : !this.state.friend_bool})\n                                            this.setState((prevState)=>{\n                                                    prevState.data = {\n                                                        ...prevState.data,\n                                                        friend: link,\n                                                    }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và chứa https:// or www. or https://\")\n                                        }\n                                        value = 172;\n                                    } else {\n                                        this.setState({friend_bool: false});\n                                    }\n                                }\n                                catch(e){}\n\n\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_care_nick}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                if (this.state.auto_care_nick === false ) {\n                                    alert(\"Tính năng đang được nâng cấp\")\n                                }\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={{borderEndWidth:1, justifyContent:'center'}}>\n                        <Button title={\n                            this.state.action ?\"Wait\" :\"Start\"\n                        }  onPress={async()=>{\n                            await this.pushAction()\n                            await this.setState({action:false})\n\n                        }  }/>\n\n                    </DataTable.Cell>\n                </DataTable.Row>\n            </View>\n        )\n    }\n}\nclass FbService extends SmallInfo{\n    constructor(props){\n        super(props);\n        self = this;\n        self.state ={\n            page : 0,\n            itemPerPage : optionsPerPage[0],\n            visible:false,\n            data : [\n                {\n                    selected : 1,\n                    facebook: '',\n                    password:'',\n                    cookie:'',\n                    like:'',\n                    react:'',\n                    answer:'',\n                    comment:'',\n                    friend:'',\n                    care_nick:'',\n                },\n            ]\n        };\n            Firebase.listen('action',\n                'value',\n                async (snapshot)=>{\n                    if(snapshot.val() != null )\n                    {\n                        var arr = Object.values(snapshot.val());\n                        this.setState({data:arr});\n                    }\n                }\n            )\n    }\n    componentDidMount(){\n        Firebase.listen('action',\n        'value',\n            async (snapshot)=>{\n                if(snapshot.val() != null )\n                {\n                    var arr = Object.values(snapshot.val());\n                    this.setState({data:arr});\n                }\n            }\n        )\n    }\n\n    render() {\n        return(\n\n            <View >\n                <Card style={{width:'170%',alignSelf:'center'}}>\n                    <Card.Content>\n                        <Title>FB SERVICE</Title>\n                        <Paragraph>FB TOOL </Paragraph>\n                    </Card.Content>\n                    <Card.Cover source={{ uri: 'https://cdn.tgdd.vn//GameApp/-1//huong-dan-tao-facebook-avatar-800x450.jpg' }} />\n                </Card>\n                <Surface style={styles.surface}>\n                    <DataTable style={{height:'100%',}} >\n                        <DataTable.Header >\n                            <DataTable.Title  style={{flex:0.5,borderEndWidth:1,justifyContent:'center'}}>STT</DataTable.Title>\n                            <DataTable.Title  style={styles.titleHeader}>FaceBook</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Password</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Cookie</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Like</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto RR</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Answer</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Comment</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Kết Bạn</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Care Nick</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Start</DataTable.Title>\n                        </DataTable.Header>\n                        {\n                            (this.state.data !== null) ? <FlatList\n                                data = {this.state.data}\n                                initialNumToRender={5}\n                                keyExtractor={(item,index) => index.toString()}\n                                renderItem={({item,index}) =>{\n                                    return(\n                                        <SmallInfo number={index} facebook={item.facebook} password={item.password} cookie={item.cookie} start={item.key} />\n                                    )\n                                }}\n                            /> : null\n\n                        }\n\n\n                    </DataTable>\n                    <DataTable.Pagination\n                        // style={{borderWidth:1,flexDirection:'row', alignContent:'flex-end'}}\n                        page={this.state.page}\n                        numberOfPages={4}\n                        onPageChange={(page) => this.setState({page:page})}\n                        label=\"1-2 of 6\"\n                        // optionsPerPage ={optionsPerPage}\n                        // itemPerPage={this.state.itemPerPage}\n                        // setitemPerPage={setitemPerPage}\n                        // showFastPagination\n                        // optionsLabel={'Rows per page'}\n                    />\n                </Surface>\n            </View>\n        )\n    }\n}\nexport default FbService\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n    Button,\n    SafeAreaView,\n    Clipboard\n\n} from 'react-native';\nimport {\n  DataTable,\n  Switch,\n  TextInput,\n  Appbar,\n  Surface,\n  Drawer,\n  Card,\n  Title,\n  Paragraph,\n  ProgressBar, Colors\n} from 'react-native-paper';\nimport Firebase from '../../firebase/Firebase.js'\nimport Tutorial from \"./Tutorial\";\nimport styles from \"./styles\";\nimport FbService from \"./FbService\";\nimport User from \"./AddUser\";\n\nclass FbScreen extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isSwitchOn: false,\n      active: 'first',\n      visible: false,\n      all : []\n    }\n  }\n  componentDidMount(){\n    this.setState({page:0});\n\n  }\n\n\n  async like() {\n    // @ts-ignore\n    await Firebase.listen('action',\n        'value',\n        async(snapshot)=>{\n          if(snapshot.val() !== null )\n          {\n            var arr = Object.values(snapshot.val())\n            var idLike = prompt(\"Type id & delay (miliseconds)\",\"253281089606500&2000\").toString();\n            var res = idLike.split('&');\n            var a =Number.isInteger(parseInt(res[0]))\n            var b =Number.isInteger(parseInt(res[1]))\n\n            if (a && b && idLike !== null){\n              for (var jndex=0;jndex<arr.length;jndex++){\n                fetch('https://graph.facebook.com/v2.3/'+ res[0]+'/likes?access_token='+ arr[jndex].cookie +'&method=post')\n                await new Promise(r => setTimeout(r,Math.random()*res[1]));\n              }\n            }\n            else{\n              alert(\"Notify: id & delay  /// ex : 1232133&2000\")\n            }\n            await alert(\"Success\")\n          }\n        }\n        )\n  }\n\n  render(){\n\n\n    // @ts-ignore\n    // @ts-ignore\n    return (\n        <SafeAreaView style={{flex:1}}>\n            <User stateModal ={this.state.visible} actionModal ={()=>{this.setState({visible:false})}} />\n            {/*// Header*/}\n              <View style={{}}>\n                <Appbar style={styles.bottom}>\n                  <Appbar.Action icon=\"archive\" onPress={() => console.log('Pressed archive')} />\n                  <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n                  <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n                  <Appbar.Action icon=\"delete\" onPress={() => console.log('Pressed delete')} />\n                </Appbar>\n                <ProgressBar progress={0.5} color={Colors.red800} />\n              </View>\n\n              <View style={styles.sectionTwo}>\n                <Tutorial />\n                <FbService />\n                <Drawer.Section title=\"Extensions\">\n                  <Drawer.Item\n                      label=\"ADD User\"\n                      active={this.state.active === 'ADD User'}\n                      onPress={() => { this.setState({ visible: true }); }}\n                  />\n                  <Drawer.Item\n                      label=\"Like ALL\"\n                      active={this.state.active === 'LIKE'}\n                      onPress={() => {this.like()} }\n                  />\n                </Drawer.Section>\n            </View>\n        </SafeAreaView>\n    );\n  }\n\n}\n\n\nexport default FbScreen;\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\n\nimport { Text, TextProps } from './Themed';\n\nexport function MonoText(props: TextProps) {\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Open up the code for this screen:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Change any of the text, save the file, and your app will automatically update.\n        </Text>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nexport default function OtherScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab Two</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","/**\n * Learn more about createBottomTabNavigator:\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\n\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport FbScreen from '../screens/FbScreen/FbScreen';\nimport OtherScreen from '../screens/OtherScreen';\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Fb\"\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\n      <BottomTab.Screen\n        name=\"Fb\"\n        component={FbNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Other\"\n        component={OtherNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction FbNavigator() {\n  return (\n    <TabOneStack.Navigator screenOptions={{headerShown:false}}>\n      <TabOneStack.Screen\n        name=\"FbScreen\"\n        component={FbScreen}\n        options={{ headerTitle: 'Tool FB' }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction OtherNavigator() {\n  return (\n    <TabTwoStack.Navigator>\n      <TabTwoStack.Screen\n        name=\"OtherScreen\"\n        component={OtherScreen}\n        options={{ headerTitle: 'Other Tool' }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one',\n            },\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two',\n            },\n          },\n        },\n      },\n      NotFound: '*',\n    },\n  },\n};\n","/**\n * If you are not familiar with React Navigation, check out the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList } from '../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      {/*<Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />*/}\n    </Stack.Navigator>\n  );\n}\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <PaperProvider>\n        <SafeAreaProvider>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </SafeAreaProvider>\n      </PaperProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}