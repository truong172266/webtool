{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","screens/FbScreen/Tutorial.js","screens/FbScreen/styles.js","firebase/Firebase.js","firebase/FirebaseWeb.js","screens/FbScreen/AddUser.js","screens/FbScreen/FbService.js","screens/FbScreen/FbScreen.tsx","components/Themed.tsx","components/StyledText.tsx","components/EditScreenInfo.tsx","screens/OtherScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf"],"names":["useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","Tutorial","Card","Content","Title","Paragraph","React","styles","StyleSheet","create","titleHeader","borderRightWidth","justifyContent","bottom","surface","alignSelf","elevation","height","width","sectionTwo","marginTop","flexDirection","textContentFlatlist","borderEndWidth","firebaseWeb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","date","hours","getHours","minutes","getMinutes","ampm","Date","getDate","getMonth","getFullYear","path","data","a","async","ref","set","alert","type","action","orderByKey","on","dataUpdate","push","then","snap","key","send","this","e","User","props","showModal","setState","visible","hideModal","containerStyle","backgroundColor","padding","borderRadius","state","facebook","password","cookie","Firebase","selected","like","react","answer","comment","friend","care_nick","View","Portal","Modal","stateModal","onDismiss","actionModal","contentContainerStyle","TextInput","onChangeText","prevState","defaultValue","placeholder","secureTextEntry","style","icon","mode","contentStyle","onPress","pushAction","optionsPerPage","SmallInfo","auto_like","auto_rr","auto_answer","auto_comment","friend_bool","auto_care_nick","update","start","arr","content","split","setTimeout","index","length","fetch","id","Math","random","value","Clipboard","setString","getString","DataTable","Row","Cell","flex","number","TouchableOpacity","copy","AntDesign","name","size","Switch","onValueChange","prompt","toString","res","Number","isInteger","parseInt","b","count","includes","res1","link","Button","title","FbService","page","itemPerPage","listen","snapshot","val","Object","values","Cover","source","uri","Surface","Header","FlatList","initialNumToRender","keyExtractor","item","renderItem","Pagination","numberOfPages","onPageChange","label","FbScreen","isSwitchOn","active","SafeAreaView","Appbar","Action","console","log","Section","Item","useThemeColor","colorName","theme","colorFromProps","Colors","Text","lightColor","darkColor","otherProps","color","MonoText","fontFamily","EditScreenInfo","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","WebBrowser","alignItems","marginHorizontal","marginVertical","paddingHorizontal","fontSize","lineHeight","textAlign","paddingVertical","OtherScreen","container","separator","fontWeight","BottomTab","createBottomTabNavigator","BottomTabNavigator","colorScheme","Navigator","initialRouteName","tabBarOptions","activeTintColor","Screen","component","FbNavigator","options","tabBarIcon","TabBarIcon","OtherNavigator","Ionicons","marginBottom","TabOneStack","createStackNavigator","screenOptions","headerShown","headerTitle","TabTwoStack","prefixes","Linking","config","screens","Root","TabOne","TabOneScreen","TabTwo","TabTwoScreen","NotFound","Navigation","NavigationContainer","linking","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","require","warn","useCachedResources","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.2f8ea911.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","import * as React from 'react';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    Button,\n\n} from 'react-native';\nimport { DataTable,Switch,TextInput,Appbar,Surface,Drawer, Card,Title,Paragraph } from 'react-native-paper';\nclass Tutorial extends React.Component {\n    render() {\n        return(\n            <Card.Content>\n                <Title>Hướng dẫn dùng công cụ:</Title>\n                <Paragraph>1. Auto Like </Paragraph>\n                <Paragraph>2. Auto Answer</Paragraph>\n                <Paragraph>3. Auto Comment </Paragraph>\n                <Paragraph>4. Auto Add Friends</Paragraph>\n                <Paragraph>5. Auto Comment Filter at gr or page </Paragraph>\n                <Paragraph>6. Care Nick</Paragraph>\n                <Paragraph>7. Other</Paragraph>\n                <Paragraph>8.Lorem Ipsum is simply dummy text of the printing and typesetting industry. </Paragraph>\n            </Card.Content>\n        )\n    }\n}\nexport default Tutorial\n","import {\n    StyleSheet,\n    View,\n    Text,\n    Button,\n\n} from 'react-native'\nconst styles = StyleSheet.create({\n    titleHeader:{\n        borderRightWidth:1,\n        justifyContent:'center'\n    },\n    bottom: {\n    },\n    surface: {\n        alignSelf: 'center',\n        elevation: 4,\n        height:'50%',\n        width:'170%'\n    },\n    sectionTwo:{\n        marginTop:50,\n        flexDirection:\"row\",\n        height:'100%',\n        justifyContent:'space-between',\n    },\n    textContentFlatlist:{\n        borderEndWidth:1,\n        justifyContent:'center'\n    }\n\n})\n\nexport default styles\n","import {FirebaseWeb} from \"../firebase/FirebaseWeb\";\nimport firebase from \"firebase\";\nconst firebaseWeb = FirebaseWeb.database();\nclass Firebase {\n    timeStamp (date){\n            var hours = date.getHours();\n            var minutes = date.getMinutes();\n            var ampm = hours >= 12 ? 'PM' : 'AM';\n            hours = hours % 12;\n            hours = hours ? hours : 12;\n            minutes = minutes < 10 ? '0' + minutes : minutes;\n            var strTime = hours + ':' + minutes + ' ' + ampm;\n            return strTime +' | '+ new Date().getDate()+ '/' + (new Date().getMonth()+ 1) + '/'+ + new Date().getFullYear();\n    }\n    async send (path, data){\n        try {\n            await firebaseWeb.ref(path).set(data);\n        }\n        catch(e){\n            alert(e);\n        }\n\n    }\n    async listen (path, type,action){\n        try {\n            await firebaseWeb.ref(path).orderByKey().on(type,action);\n        }\n        catch(e){\n            alert(e);\n        }\n\n    }\n    async push (path,data, dataUpdate){\n        try {\n            await firebaseWeb.ref(path).push(data).then((snap)=>{\n                    const key = snap.key;\n                    this.send (`${path}/${key}/key`, key\n                    );\n                }\n            );\n        }\n        catch(e){\n            alert(e);\n        }\n    }\n    async update  (path,key,data){\n        try {\n            this.send (`${path}/${key}`, data\n            );\n        }\n        catch(e){\n            alert('error');\n        }\n    }\n\n}\nexport default new  Firebase();\n","import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCpCE9jyqrLkDEUstipfzXfhKdSAU-yvfM\",\n    authDomain: \"template-ui.firebaseapp.com\",\n    projectId: \"template-ui\",\n    storageBucket: \"template-ui.appspot.com\",\n    messagingSenderId: \"678691011139\",\n    appId: \"1:678691011139:web:3de78eefde36b5d4a972f6\",\n    measurementId: \"G-BDLJF5C0EV\"\n};\n\nexport const FirebaseWeb = firebase.initializeApp(firebaseConfig);\n","import * as React from 'react';\nimport {\n    View,\n} from 'react-native';\nimport {Modal, Portal, Text, Button, Provider, TextInput, DataTable} from 'react-native-paper';\nimport FbService from \"./FbService\";\nimport Firebase from \"../../firebase/Firebase\";\n\nexport default class User extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data:{\n                facebook: '',\n                password:'',\n                cookie:'',\n            },\n            visible: false ,\n        }\n    }\n    async pushAction(){\n        await Firebase.push('action',\n            {\n                selected : 1,\n                facebook: this.state.data.facebook,\n                password:this.state.data.password,\n                cookie:this.state.data.cookie,\n                like:'',\n                react:'',\n                answer:'',\n                comment:'',\n                friend:'',\n                care_nick:'',\n            }\n        )\n    }\n    showModal = () => this.setState({visible:this.props.visible});\n    hideModal = () =>this.setState({visible:false});\n    containerStyle = {backgroundColor: 'white', padding: 20, width:'30%', alignSelf:'center',justifyContent:'space-between', height:'35%', borderRadius:20};\n\n    render(){\n\n        return (\n                <View>\n                    <Portal>\n                        <Modal visible={this.props.stateModal} onDismiss={this.props.actionModal} contentContainerStyle={this.containerStyle}>\n                            <TextInput\n                                onChangeText={text => this.setState(\n                                    (prevState)=>{\n                                        prevState.data = {\n                                            ...prevState.data,\n                                            facebook: text,\n                                        }\n                                    }\n                                )}\n                                defaultValue={this.state.data.facebook}\n                                placeholder={\"Type ...........\"}\n                                secureTextEntry={true}\n                            />\n                            <TextInput\n                                defaultValue = {this.state.data.password}\n                                onChangeText={(text)=>{\n                                    this.setState((prevState)=>{\n                                        prevState.data = {\n                                            ...prevState.data,\n                                            password: text,\n                                        }\n                                    })\n                                }}\n                                placeholder={\"Type ...........\"}\n                                secureTextEntry={true}\n                            />\n                            <TextInput\n                                defaultValue = {this.state.data.cookie}\n                                onChangeText={(text)=>{\n                                    this.setState((prevState)=>{\n                                        prevState.data = {\n                                            ...prevState.data,\n                                            cookie: text,\n                                        }\n                                    })\n                                }}\n                                placeholder={\"Type ...........\"}\n\n                            />\n                            <View style={{flexDirection:'row',justifyContent:'space-evenly'}}>\n                                <Button icon=\"send\" mode=\"outlined\"\n                                        contentStyle={{width:'30%', }}\n                                        style={{marginTop:20}}\n                                        onPress={() => this.pushAction()}>\n                                </Button>\n                            </View>\n                        </Modal>\n                    </Portal>\n                </View>\n        );\n    }\n};\n\n","import {Card, DataTable, Paragraph, Surface, Switch,  Title,TextInput,} from \"react-native-paper\";\nimport styles from \"./styles\";\nimport {Button, View, FlatList, Text, Alert, Clipboard,TouchableOpacity} from \"react-native\";\nimport * as React from \"react\";\nimport {AntDesign, Ionicons} from '@expo/vector-icons';\nimport Firebase from \"../../firebase/Firebase\";\nconst optionsPerPage = [2, 3, 4];\nimport User from \"./AddUser\";\n\nvar self;\n// @ts-ignore\nclass SmallInfo extends User{\n    constructor(props){\n        super(props);\n        this.state = {\n            auto_like: false,\n            auto_rr:false,\n            auto_answer:false,\n            auto_comment:false,\n            friend_bool:false,\n            auto_care_nick:false,\n            data :\n                {\n                    selected : 1,\n                    facebook: '',\n                    password:'',\n                    cookie:'',\n                    like:'',\n                    react:'',\n                    answer:'',\n                    comment:'',\n                    friend:'',\n                    care_nick:'',\n                },\n        }\n\n    }\n    async pushAction(){\n        await Firebase.update(`action`,\n            `${this.props.start}`,\n            {\n                selected : 1,\n                facebook: this.props.facebook,\n                password:this.props.password,\n                key:this.props.start,\n                cookie:this.props.cookie,\n                like:this.state.data.like,\n                react:this.state.data.react,\n                answer:this.state.data.answer,\n                comment:this.state.data.comment,\n                friend:this.state.data.friend,\n                care_nick:this.state.data.care_nick,\n            }\n            )\n        // if (this.state.auto_like === true){\n        //     await fetch(' https://graph.facebook.com/v10.0/'+ this.state.data.like+'/likes?access_token='+ this.props.cookie+'&method=post')\n        // }\n\n        if (this.state.auto_comment === true){\n            var arr = this.state.data.comment.content.split(',')\n            setTimeout(() => {\n                for (var index =0;index<arr.length;index ++){\n                    fetch(' https://graph.facebook.com/v10.0/'+ this.state.data.comment.id+'/comments?message='+arr[index]+'&access_token='+ this.props.cookie+'&method=post')\n                }\n\n            }, Math.random()*2000);\n\n        }\n    }\n    copy (value){\n        Clipboard.setString(value);\n        return Clipboard.getString();\n    }\n    render() {\n        return(\n            <View>\n                <DataTable.Row>\n                    <DataTable.Cell style={{flex:0.5,borderEndWidth:1,justifyContent:'center'}}>{this.props.number}</DataTable.Cell>\n                    <DataTable.Cell  style={styles.textContentFlatlist}>\n                        <TouchableOpacity\n                            onPress={() => this.copy(`${this.props.facebook}`)}\n                        >\n                            <AntDesign name={'copy1'} size={15}/>\n                        </TouchableOpacity>\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <TouchableOpacity\n                            onPress={() => this.copy(`${this.props.password}`)}\n                        >\n                            <AntDesign name={'copy1'} size={15}/>\n                        </TouchableOpacity>\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <TouchableOpacity\n                            onPress={() => this.copy(`${this.props.cookie}`)}\n                        >\n                            <AntDesign name={'copy1'} size={15}/>\n                        </TouchableOpacity>\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_like}\n                            onValueChange={() =>{\n                                var value = 266\n                                try{\n                                    if (this.state.auto_like=== false ) {\n                                        // var like = prompt(\"Tool cho biết\", \"like,https://www.facebook.com/ieltsilgt/photos/a.114187730182504/320427316225210/\").toString()\n                                        var like = prompt(\"Tool cho biết\", \"id_link\").toString()\n                                        var res = like.split('_')\n                                        var a =Number.isInteger(parseInt(res[0]))\n                                        var b =Number.isInteger(parseInt(res[1]))\n\n                                        // if(like !== ''&& (like.includes(\"www.\") || like.includes(\"https://\") ||  like.includes(\"http://\"))){\n                                        if( a &&b ){\n                                            this.setState({auto_like : !this.state.auto_like})\n                                            this.setState(function (prevState){\n                                                prevState.data = {\n                                                    ...prevState.data,\n                                                    like: like,\n                                                }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và chứa id là một số, đồng thời cách nhau bởi dấu phẩy\")\n                                            // alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và địa chỉ chưa https:// or http:// or www.\")\n                                        }\n\n                                        value = 172;\n                                    } else {\n                                        this.setState({auto_answer: false});\n                                    }\n                                }\n                                catch(e){}\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_rr}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                try{\n                                    if (this.state.auto_rr === false ) {\n                                        var react = prompt(\"Tool cho biết\",\"answer,https://www.facebook.com/ieltsilgt/photos/a.114187730182504/320427316225210/\").toString()\n                                        var arr = [\"like\",\"tim\",\"haha\",\"thương thương\"]\n                                        var count = 0;\n                                        for (var index = 0; index<4;index ++){\n                                            if(react.includes(arr[index])){\n                                                count =1;\n                                            }\n                                        }\n                                        if(count === 1 || (react.includes(\"www.\") || react.includes(\"https://\") ||  react.includes(\"http://\")) ){\n                                            this.setState({auto_rr : !this.state.auto_rr})\n                                            this.setState((prevState)=>{\n                                                prevState.data = {\n                                                    ...prevState.data,\n                                                    react: react,\n                                                }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Hãy nhập một trong bốn chữ cái : like, tim, haha, thương thương, và địa chỉ chứa https:// or http:// or www.\");\n                                        }\n\n                                        value = 172;\n\n                                    }\n\n                                    else{\n                                        this.setState({ auto_rr: false});\n                                    }\n\n                                }\n                                catch(e){\n\n                                    }\n                            }\n\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_answer}\n                            onValueChange={() => {\n                                var value = 266\n                                try{\n                                    if (this.state.auto_answer === false ) {\n                                        var answer = prompt(\"Tool cho biết\", \"Nhập câu trả lời...\").toString()\n                                        if(answer !== ''&& (answer.includes(\"www.\") || answer.includes(\"https://\") ||  answer.includes(\"http://\"))){\n                                            this.setState({auto_answer : !this.state.auto_answer})\n                                            this.setState((prevState)=>{\n                                                    prevState.data = {\n                                                        ...prevState.data,\n                                                        answer: answer,\n                                                    }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và địa chỉ chưa https:// or http:// or www.\")\n                                        }\n\n                                        value = 172;\n                                    } else {\n                                        this.setState({auto_answer: false});\n                                    }\n                                }\n                                catch(e){}\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_comment}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                try{\n                                    if (this.state.auto_comment === false ) {\n                                        var comment = prompt(\"Tool cho biết\", \"Your comment...& id\").toString()\n                                        var res = comment.split(\"&\");\n                                        var res1 = res[1].split('_')\n                                        var a =Number.isInteger(parseInt(res1[0]))\n                                        var b =Number.isInteger(parseInt(res1[1]))\n\n                                        if(a && b){\n                                            this.setState({auto_comment : !this.state.auto_comment})\n                                            this.setState((prevState)=>{\n                                                    prevState.data = {\n                                                        ...prevState.data,\n                                                        comment: {id : res[1],content:res[0]} ,\n                                                    }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và chứa id là một số và đồng thời cách nhau bởi &\")\n                                        }\n                                        value = 172;\n                                    } else {\n                                        this.setState({auto_comment: false});\n                                    }\n                                }\n                                catch(e){}\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.friend_bool}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                try{\n                                    if (this.state.friend_bool === false ) {\n                                        var link = prompt(\"Tool cho biết\", \"Nhập link...\").toString()\n                                        if(link !== '' && (link.includes(\"www.\") || link.includes(\"https://\") ||  link.includes(\"http://\") )){\n                                            this.setState({friend_bool : !this.state.friend_bool})\n                                            this.setState((prevState)=>{\n                                                    prevState.data = {\n                                                        ...prevState.data,\n                                                        friend: link,\n                                                    }\n                                            })\n                                        }\n                                        else {\n                                            alert(\"Độ văn bản lớn hơn hoặc bằng 1 từ và chứa https:// or www. or https://\")\n                                        }\n                                        value = 172;\n                                    } else {\n                                        this.setState({friend_bool: false});\n                                    }\n                                }\n                                catch(e){}\n\n\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={styles.textContentFlatlist}>\n                        <Switch\n                            value={this.state.auto_care_nick}\n                            onValueChange={() =>\n                            {\n                                var value = 266\n                                if (this.state.auto_care_nick === false ) {\n                                    alert(\"Tính năng đang được nâng cấp\")\n                                }\n                            }\n                            }\n                        />\n                    </DataTable.Cell>\n                    <DataTable.Cell style={{borderEndWidth:1, justifyContent:'center'}}>\n                        <Button title={\"Action\"}  onPress={()=> this.pushAction()}/>\n                    </DataTable.Cell>\n                </DataTable.Row>\n            </View>\n        )\n    }\n}\nclass FbService extends SmallInfo{\n    constructor(props){\n        super(props);\n        self = this;\n        self.state ={\n            page : 0,\n            itemPerPage : optionsPerPage[0],\n            visible:false,\n            data : [\n                {\n                    selected : 1,\n                    facebook: '',\n                    password:'',\n                    cookie:'',\n                    like:'',\n                    react:'',\n                    answer:'',\n                    comment:'',\n                    friend:'',\n                    care_nick:'',\n                },\n            ]\n        };\n            Firebase.listen('action',\n                'value',\n                async (snapshot)=>{\n                    if(snapshot.val() != null )\n                    {\n                        var arr = Object.values(snapshot.val());\n                        this.setState({data:arr});\n                    }\n                }\n            )\n    }\n    componentDidMount(){\n        Firebase.listen('action',\n        'value',\n            async (snapshot)=>{\n                if(snapshot.val() != null )\n                {\n                    var arr = Object.values(snapshot.val());\n                    this.setState({data:arr});\n                }\n            }\n        )\n    }\n\n    render() {\n        return(\n\n            <View >\n                <Card style={{width:'170%',alignSelf:'center'}}>\n                    <Card.Content>\n                        <Title>FB SERVICE</Title>\n                        <Paragraph>FB TOOL </Paragraph>\n                    </Card.Content>\n                    <Card.Cover source={{ uri: 'https://cdn.tgdd.vn//GameApp/-1//huong-dan-tao-facebook-avatar-800x450.jpg' }} />\n                </Card>\n                <Surface style={styles.surface}>\n                    <DataTable style={{height:'100%',}} >\n                        <DataTable.Header >\n                            <DataTable.Title  style={{flex:0.5,borderEndWidth:1,justifyContent:'center'}}>STT</DataTable.Title>\n                            <DataTable.Title  style={styles.titleHeader}>FaceBook</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Password</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Cookie</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Like</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto RR</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Answer</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Comment</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Kết Bạn</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Auto Care Nick</DataTable.Title>\n                            <DataTable.Title style={styles.titleHeader}>Start</DataTable.Title>\n                        </DataTable.Header>\n                        {\n                            (this.state.data !== null) ? <FlatList\n                                data = {this.state.data}\n                                initialNumToRender={5}\n                                keyExtractor={(item,index) => index.toString()}\n                                renderItem={({item,index}) =>{\n                                    return(\n                                        <SmallInfo number={index} facebook={item.facebook} password={item.password} cookie={item.cookie} start={item.key} />\n                                    )\n                                }}\n                            /> : null\n\n                        }\n\n\n                    </DataTable>\n                    <DataTable.Pagination\n                        // style={{borderWidth:1,flexDirection:'row', alignContent:'flex-end'}}\n                        page={this.state.page}\n                        numberOfPages={4}\n                        onPageChange={(page) => this.setState({page:page})}\n                        label=\"1-2 of 6\"\n                        // optionsPerPage ={optionsPerPage}\n                        // itemPerPage={this.state.itemPerPage}\n                        // setitemPerPage={setitemPerPage}\n                        // showFastPagination\n                        // optionsLabel={'Rows per page'}\n                    />\n                </Surface>\n            </View>\n        )\n    }\n}\nexport default FbService\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n    Button,\n    SafeAreaView,\n    Clipboard\n\n} from 'react-native';\nimport { DataTable,Switch,TextInput,Appbar,Surface,Drawer, Card,Title,Paragraph } from 'react-native-paper';\nimport Tutorial from \"./Tutorial\";\nimport styles from \"./styles\";\nimport FbService from \"./FbService\";\nimport User from \"./AddUser\";\n\nclass FbScreen extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isSwitchOn: false,\n      active: 'first',\n      visible: false,\n\n    }\n  }\n  componentDidMount(){\n    this.setState({page:0});\n  }\n\n  render(){\n\n    // @ts-ignore\n    // @ts-ignore\n    return (\n        <SafeAreaView style={{flex:1}}>\n            <User stateModal ={this.state.visible} actionModal ={()=>{this.setState({visible:false})}} />\n            {/*// Header*/}\n              <View style={{}}>\n                <Appbar style={styles.bottom}>\n                  <Appbar.Action icon=\"archive\" onPress={() => console.log('Pressed archive')} />\n                  <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n                  <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n                  <Appbar.Action icon=\"delete\" onPress={() => console.log('Pressed delete')} />\n                </Appbar>\n              </View>\n\n              <View style={styles.sectionTwo}>\n                <Tutorial />\n                <FbService />\n                <Drawer.Section title=\"Extensions\">\n                  <Drawer.Item\n                      label=\"ADD User\"\n                      active={this.state.active === 'ADD User'}\n                      onPress={() => { this.setState({ visible: true }); }}\n                  />\n                  <Drawer.Item\n                      label=\"DEL User\"\n                      active={this.state.active === 'DEL User'}\n                      onPress={() => { this.setState({ active: 'second' }); }}\n                  />\n                </Drawer.Section>\n            </View>\n        </SafeAreaView>\n    );\n  }\n\n}\n\n\nexport default FbScreen;\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\n\nimport { Text, TextProps } from './Themed';\n\nexport function MonoText(props: TextProps) {\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Open up the code for this screen:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Change any of the text, save the file, and your app will automatically update.\n        </Text>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nexport default function OtherScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab Two</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","/**\n * Learn more about createBottomTabNavigator:\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\n\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport FbScreen from '../screens/FbScreen/FbScreen';\nimport OtherScreen from '../screens/OtherScreen';\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Fb\"\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\n      <BottomTab.Screen\n        name=\"Fb\"\n        component={FbNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Other\"\n        component={OtherNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction FbNavigator() {\n  return (\n    <TabOneStack.Navigator screenOptions={{headerShown:false}}>\n      <TabOneStack.Screen\n        name=\"FbScreen\"\n        component={FbScreen}\n        options={{ headerTitle: 'Tool FB' }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction OtherNavigator() {\n  return (\n    <TabTwoStack.Navigator>\n      <TabTwoStack.Screen\n        name=\"OtherScreen\"\n        component={OtherScreen}\n        options={{ headerTitle: 'Other Tool' }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one',\n            },\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two',\n            },\n          },\n        },\n      },\n      NotFound: '*',\n    },\n  },\n};\n","/**\n * If you are not familiar with React Navigation, check out the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList } from '../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      {/*<Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />*/}\n    </Stack.Navigator>\n  );\n}\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <PaperProvider>\n        <SafeAreaProvider>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </SafeAreaProvider>\n      </PaperProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}